/*Variables*/
$breakpoint-tablet: 1000px;
$colors: (white:#fff,
    light:#dee2e6,
    black:#000,
    grey:#6c757d,
    dark-grey:darkgrey,
    red:red,
    dark-red:#dc3545,
    green:#27e178,
    blue:#279EDA,
    yellow:#ffc107,
    fade-blue: #34435E,
    transparent: transparent);

/*Display*/
.d {
    $display: flex, inline, table, list-item, block, none;

    @each $prop in $display {
        &-#{$prop} {
            display: $prop !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                display: $prop !important;
            }
        }
    }
}

.flex {
    $direction: row, column;

    @each $prop in $direction {
        &-#{$prop} {
            flex-direction: $prop !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                flex-direction: $prop !important;
            }
        }
    }
}

/*Margin & Padding*/
$prop: padding,
margin;

.m {
    &-auto {
        margin: auto !important;
    }

    @media screen and (max-width: $breakpoint-tablet) {
        &-m-auto {
            margin: auto !important;
        }
    }

    @for $i from 0 through 25 {
        &-#{$i} {
            margin: #{$i}rem !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                margin: #{$i}rem !important;
            }
        }
    }

    &t {
        &-auto {
            margin-top: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-top: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                margin-top: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-top: #{$i}rem !important;
                }
            }
        }
    }

    &b {
        &-auto {
            margin-bottom: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-bottom: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                margin-bottom: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-bottom: #{$i}rem !important;
                }
            }
        }
    }

    &r {
        &-auto {
            margin-right: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-right: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                margin-right: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-right: #{$i}rem !important;
                }
            }
        }
    }

    &l {
        &-auto {
            margin-left: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-left: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                margin-left: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-left: #{$i}rem !important;
                }
            }
        }
    }
}

/*Padding*/
.p {
    &-auto {
        padding: auto !important;
    }

    @media screen and (max-width: $breakpoint-tablet) {
        &-m-auto {
            padding: auto !important;
        }
    }

    @for $i from 0 through 25 {
        &-#{$i} {
            padding: #{$i}rem !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                padding: #{$i}rem !important;
            }
        }
    }

    &t {
        &-auto {
            padding-top: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-top: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                padding-top: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-top: #{$i}rem !important;
                }
            }
        }
    }

    &b {
        &-auto {
            padding-bottom: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-bottom: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                padding-bottom: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-bottom: #{$i}rem !important;
                }
            }
        }
    }

    &r {
        &-auto {
            padding-right: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-right: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                padding-right: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-right: #{$i}rem !important;
                }
            }
        }
    }

    &l {
        &-auto {
            padding-left: auto !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-left: auto !important;
            }
        }

        @for $i from 0 through 25 {
            &-#{$i} {
                padding-left: #{$i}rem !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-left: #{$i}rem !important;
                }
            }
        }
    }
}

/*Sizing*/
/*Width*/
.w {
    &-auto {
        width: auto !important;
    }

    @for $i from 0 through 100 {
        &-#{$i} {
            width: $i * 1% !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                width: $i * 1% !important;
            }
        }
    }
}

/*Height*/
.h {
    &-auto {
        height: auto !important;
    }

    @for $i from 0 through 100 {
        &-#{$i} {
            height: $i * 1% !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                height: $i * 1% !important;
            }
        }
    }
}

/*Borders*/
.b {
    @for $i from 0 through 5 {
        &-#{$i} {
            border: #{$i}px solid white !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                border: #{$i}px solid white !important;
            }
        }
    }

    &r {
        @for $i from 0 through 5 {
            &-#{$i} {
                border-right: #{$i}px solid white !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-right: #{$i}px solid white !important;
                }
            }
        }
    }

    &t {
        @for $i from 0 through 5 {
            &-#{$i} {
                border-top: #{$i}px solid white !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-top: #{$i}px solid white !important;
                }
            }
        }
    }

    &b {
        @for $i from 0 through 5 {
            &-#{$i} {
                border-bottom: #{$i}px solid white !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-bottom: #{$i}px solid white !important;
                }
            }
        }
    }

    &l {
        @for $i from 0 through 5 {
            &-#{$i} {
                border-left: #{$i}px solid white !important;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-left: #{$i}px solid white !important;
                }
            }
        }
    }

    @each $prop,
    $code in $colors {
        &-#{$prop} {
            border-color: $code !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                border-color: $code !important;
            }
        }
    }
}

//TODO: Add border colors and styles

/*Headings*/
//TODO: Calculate size in rem
.h1 {
    font-size: xxx-large !important;
}

.h2 {
    font-size: xx-large !important;
}

.h3 {
    font-size: x-large !important;
}

.h4 {
    font-size: large !important;
}

.h5 {
    font-size: medium !important;
}

.h6 {
    font-size: small !important;
}

.h7 {
    font-size: x-small !important;
}

.h8 {
    font-size: xx-small !important;
}

/*Text Styling*/
.bold {
    font-weight: bold !important;
}

.italic {
    font-style: italic !important;
}

.normal {
    font-weight: normal !important;
    font-style: normal !important;
}

.uppercase {
    text-transform: uppercase !important;
}

.lowercase {
    text-transform: lowercase !important;
}

.capitalize {
    text-transform: capitalize !important;
}

.quote {
    font-family: 'Handlee', sans-serif !important;
    font-weight: bold !important;

    &-footer {
        display: block !important;
        font-size: 80% !important;
        color: #6c757d !important;
    }
}

.monospace {
    font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !important;
}

.lead {
    font-size: 1.25rem !important;
    font-weight: 300 !important;
}

$alignment: center,
justify,
right,
left,
start,
end,
unset;

$vertical: top,
bottom,
middle,
baseline,
text-top,
text-bottom;

.text {
    @each $prop in $alignment {
        &-#{$prop} {
            text-align: $prop !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                text-align: $prop !important;
            }
        }
    }

    @each $prop in $vertical {
        &-#{$prop} {
            vertical-align: $prop !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                vertical-align: $prop !important;
            }
        }
    }

    @each $prop,
    $code in $colors {
        &-#{$prop} {
            color: $code !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                color: $code !important;
            }
        }
    }
}

/*Block Styles*/
$position: top,
bottom;

.fixed {
    @each $prop in $position {
        &-#{$prop} {
            position: fixed !important;
            #{$prop}: 0 !important;
            right: 0 !important;
            left: 0 !important;
            z-index: 1030 !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-#{$prop} {
                position: fixed !important;
                #{$prop}: 0 !important;
                right: 0 !important;
                left: 0 !important;
                z-index: 1030 !important;
            }
        }
    }
}

.bg {

    @each $prop,
    $code in $colors {
        &-#{$prop} {
            background-color: $code !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                background-color: $code !important;
            }
        }
    }
}

.opacity {
    @for $i from 0 through 10 {
        &-#{$i} {
            opacity: $i * 10% !important;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                opacity: $i * 10% !important;
            }
        }
    }
}