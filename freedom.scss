/*Variables*/
$breakpoint-tablet: 1000px;
$colors: (white:#fff, black:#000, grey:grey, dark-grey:darkgrey, red:red, green:#27e178, blue:#279EDA, fade-blue: #34435E);

/*Display*/
.d {
    $display: flex, block, none;

    @each $prop in $display {
        &-flex {
            display: $prop;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-flex {
                display: $prop;
            }
        }
    }
}

.flex {
    $direction: row, column;

    @each $prop in $direction {
        &-#{$prop} {
            flex-direction: $prop;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                flex-direction: $prop;
            }
        }
    }
}

/*Margin & Padding*/
$prop: padding,
margin;

.m {
    &-auto {
        margin: auto;
    }

    @for $i from 1 through 25 {
        &-#{$i} {
            margin: #{$i}rem;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                margin: #{$i}rem;
            }
        }
    }

    &t {
        &-auto {
            margin-top: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-top: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                margin-top: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-top: #{$i}rem;
                }
            }
        }
    }

    &b {
        &-auto {
            margin-bottom: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-bottom: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                margin-bottom: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-bottom: #{$i}rem;
                }
            }
        }
    }

    &r {
        &-auto {
            margin-right: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-right: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                margin-right: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-right: #{$i}rem;
                }
            }
        }
    }

    &l {
        &-auto {
            margin-left: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                margin-left: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                margin-left: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    margin-left: #{$i}rem;
                }
            }
        }
    }
}

/*Padding*/
.p {
    &-auto {
        padding: auto;
    }

    @for $i from 1 through 25 {
        &-#{$i} {
            padding: #{$i}rem;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                padding: #{$i}rem;
            }
        }
    }

    &t {
        &-auto {
            padding-top: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-top: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                padding-top: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-top: #{$i}rem;
                }
            }
        }
    }

    &b {
        &-auto {
            padding-bottom: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-bottom: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                padding-bottom: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-bottom: #{$i}rem;
                }
            }
        }
    }

    &r {
        &-auto {
            padding-right: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-right: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                padding-right: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-right: #{$i}rem;
                }
            }
        }
    }

    &l {
        &-auto {
            padding-left: auto;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-auto {
                padding-left: auto;
            }
        }

        @for $i from 1 through 25 {
            &-#{$i} {
                padding-left: #{$i}rem;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    padding-left: #{$i}rem;
                }
            }
        }
    }
}

/*Borders*/
.b {
    @for $i from 1 through 5 {
        &-#{$i} {
            border: #{$i}px solid white;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                border: #{$i}px solid white;
            }
        }
    }

    &r {
        @for $i from 1 through 5 {
            &-#{$i} {
                border-right: #{$i}px solid white;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-right: #{$i}px solid white;
                }
            }
        }
    }

    &t {
        @for $i from 1 through 5 {
            &-#{$i} {
                border-top: #{$i}px solid white;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-top: #{$i}px solid white;
                }
            }
        }
    }

    &b {
        @for $i from 1 through 5 {
            &-#{$i} {
                border-bottom: #{$i}px solid white;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-bottom: #{$i}px solid white;
                }
            }
        }
    }

    &l {
        @for $i from 1 through 5 {
            &-#{$i} {
                border-left: #{$i}px solid white;
            }

            @media screen and (max-width: $breakpoint-tablet) {
                &-m-#{$i} {
                    border-left: #{$i}px solid white;
                }
            }
        }
    }
}

//TODO: Add border colors and styles

/*Headings*/
//TODO: Calculate size in rem
.h1 {
    font-size: xxx-large;
}

.h2 {
    font-size: xx-large;
}

.h3 {
    font-size: x-large;
}

.h4 {
    font-size: large;
}

.h5 {
    font-size: medium;
}

.h6 {
    font-size: small;
}

.h7 {
    font-size: x-small;
}

.h8 {
    font-size: xx-small;
}

/*Text Styling*/
.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

.normal {
    font-weight: normal;
    font-style: normal;
}

.quote {
    font-family: 'Handlee', sans-serif;
    font-weight: bold;
}

$alignment: center,
justify,
right,
left;

.text {
    @each $prop in $alignment {
        &-#{$prop} {
            text-align: $prop;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                text-align: $prop;
            }
        }
    }

    @each $prop,
    $code in $colors {
        &-#{$prop} {
            color: $code;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                color: $code;
            }
        }
    }
}

/*Block Styles*/
.bg-black {
    background-color: rgb(1, 1, 1, 0.7);
    border-radius: 4px;
}

.bg {

    @each $prop,
    $code in $colors {
        &-#{$prop} {
            background-color: $code;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$prop} {
                color: $code;
            }
        }
    }
}

.opacity {
    @for $i from 1 through 10 {
        &-#{$i} {
            opacity: $i * 10%;
        }

        @media screen and (max-width: $breakpoint-tablet) {
            &-m-#{$i} {
                opacity: $i * 10%;
            }
        }
    }
}