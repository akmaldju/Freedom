@import 'variables';

/*Image Styles*/
.img {

    &-fit,
    &-object-fit,
    &-of {
        @each $prop in $scale {
            &-#{$prop} {
                object-fit: $prop !important;
            }
        }
    }

    &-rounded {
        border-radius: 6px;
    }

    &-circle {
        border-radius: 50%;
    }

    &-thumbnail {
        padding: 4px;
        line-height: 1.42857143;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
        -webkit-transition: all .2s ease-in-out;
        -o-transition: all .2s ease-in-out;
        transition: all .2s ease-in-out;
        display: inline-block;
        max-width: 100%;
        height: auto;
    }

    &-hover {
        &-light {
            &:hover {
                cursor: pointer;
                transition: 0.3s;
                opacity: 0.7;
            }
        }

        &-shadow {
            &:hover {
                cursor: pointer;
                transition: 0.3s;
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            }
        }
    }

    &-responsive {
        display: block;
        max-width: 100%;
        height: auto;
    }
}

.img-filter,
.filter,
.if {
    &-blur {
        filter: blur(5px);
    }

    &-brightness {
        filter: brightness(0.30);
    }

    &-contrast {
        filter: contrast(180%);
    }

    &-grayscale {
        filter: grayscale(100%);
    }

    &-huerotate {
        filter: hue-rotate(180deg);
    }

    &-invert {
        filter: invert(100%);
    }

    &-opacity {
        filter: opacity(50%);
    }

    &-saturate {
        filter: saturate(7);
    }

    &-sepia {
        filter: sepia(100%);
    }

    &-shadow {
        filter: drop-shadow(8px 8px 10px gray);
    }
}

.img-flip,
.flip,
.flipped {
    transform: scaleX(-1);

    &-x {
        transform: scaleX(-1);
    }

    &-y {
        transform: scaleY(-1);
    }
}

.img-avatar,
.avatar {
    vertical-align: middle;
    width: 50px;
    height: 50px;
    border-radius: 50%;
}

@each $breakpoint,
$width in $breakpoints {
    @media screen and (max-width: $width) {

        /*Image Styles*/
        .img {
            &-#{$breakpoint} {

                &-fit,
                &-object-fit,
                &-of {
                    @each $prop in $scale {
                        &-#{$prop} {
                            object-fit: $prop !important;
                        }
                    }
                }

                &-rounded {
                    border-radius: 6px;
                }

                &-circle {
                    border-radius: 50%;
                }

                &-thumbnail {
                    padding: 4px;
                    line-height: 1.42857143;
                    background-color: #fff;
                    border: 1px solid #ddd;
                    border-radius: 4px;
                    -webkit-transition: all .2s ease-in-out;
                    -o-transition: all .2s ease-in-out;
                    transition: all .2s ease-in-out;
                    display: inline-block;
                    max-width: 100%;
                    height: auto;
                }

                &-hover {
                    &-light {
                        &:hover {
                            cursor: pointer;
                            transition: 0.3s;
                            opacity: 0.7;
                        }
                    }

                    &-shadow {
                        &:hover {
                            cursor: pointer;
                            transition: 0.3s;
                            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
                        }
                    }
                }

                &-responsive {
                    display: block;
                    max-width: 100%;
                    height: auto;
                }
            }
        }

        .img-filter,
        .filter,
        .if {
            &-#{$breakpoint} {
                &-blur {
                    filter: blur(5px);
                }

                &-brightness {
                    filter: brightness(0.30);
                }

                &-contrast {
                    filter: contrast(180%);
                }

                &-grayscale {
                    filter: grayscale(100%);
                }

                &-huerotate {
                    filter: hue-rotate(180deg);
                }

                &-invert {
                    filter: invert(100%);
                }

                &-opacity {
                    filter: opacity(50%);
                }

                &-saturate {
                    filter: saturate(7);
                }

                &-sepia {
                    filter: sepia(100%);
                }

                &-shadow {
                    filter: drop-shadow(8px 8px 10px gray);
                }
            }
        }

        .img-flip,
        .flip,
        .flipped {
            &-#{$breakpoint} {
                transform: scaleX(-1);

                &-x {
                    transform: scaleX(-1);
                }

                &-y {
                    transform: scaleY(-1);
                }
            }
        }
    }
}